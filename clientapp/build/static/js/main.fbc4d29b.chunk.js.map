{"version":3,"sources":["components/logo_waitqr.png","context/restaurantes/restauranteContext.js","context/mesas/mesasContext.js","context/sesionesGenerales/sesionGeneralContext.js","context/sesionesIndividuales/sesionIndividualContext.js","components/Welcome.js","components/Menu/picana-t.jpg","context/menus/menusContext.js","context/secciones/seccionesContext.js","context/platillos/platillosContext.js","components/papas-gajo.jpg","components/MenuPlatillo.js","components/Menu.js","components/MenuDigital.js","components/Buttons/BackButton.js","context/ordenes/ordenContext.js","context/platillosOrdenados/platilloOrdenadoContext.js","components/DetallePlatillo.js","components/Buttons/BackButtonOrden.js","components/Orden.js","components/Estatus.js","types/index.js","context/restaurantes/restauranteReducer.js","config/axios.js","context/restaurantes/restauranteState.js","context/mesas/mesasReducer.js","context/mesas/mesasState.js","context/menus/menusReducer.js","context/menus/menusState.js","context/secciones/seccionesReducer.js","context/secciones/seccionesState.js","context/platillos/platillosReducer.js","context/platillos/platillosState.js","context/sesionesGenerales/sesionGeneralReducer.js","context/sesionesGenerales/sesionGeneralState.js","context/sesionesIndividuales/sesionIndividualReducer.js","context/sesionesIndividuales/sesionIndividualState.js","context/ordenes/ordenReducer.js","context/ordenes/ordenState.js","context/platillosOrdenados/platilloOrdenadoReducer.js","context/platillosOrdenados/platilloOrdenadoState.js","App.js","index.js"],"names":["restauranteContext","createContext","mesaContext","sesionGeneralContext","sesionIndividualContext","Welcome","history","useHistory","restaurantesContext","useContext","restaurantes","obtenerUnRestaurante","guardarRestauranteActual","mesassContext","mesasContext","mesasrestaurante","mesa","obtenerMesas","guardarMesaActual","sesionGeneralsContext","sesiongeneralmesa","obtenerSesionGeneral","agregarSesionGeneral","sesionIndividualsContext","sesionindividualsesiongeneral","obtenerSesionIndividual","agregarSesionIndividual","useState","error","guardarError","restauranteId","mesaId","seleccion","horarioInicio","restaurante","sesionGeneralAux","mesaNombre","formulario","guardarFormulario","sesionGeneral","useEffect","_id","Container","fluid","className","Row","Col","nombre","Form","Control","onChange","e","target","name","value","obj","JSON","parse","console","log","title","as","map","stringify","numero","id","Button","onClick","localStorage","getItem","push","length","setItem","Date","toLocaleString","timeZone","Card","Img","variant","src","Logo","menuContext","seccionContext","platillosContext","MenuPlatillo","seccionSeleccionada","platillossContext","platillosseccion","obtenerPlatillos","platillo","guardarPlatilloActual","i","xs","to","imagenPlatillo","descripcion","precio","Menu","menu","menussContext","menusContext","seccionessContext","menusrestaurante","obtenerMenus","guardarMenuActual","seccionesContext","seccionesmenu","seccion","obtenerSecciones","guardarSeccionActual","guardarSeccionSeleccionada","Accordion","defaultActiveKey","Toggle","Header","eventKey","seleccionarSeccion","Collapse","Body","MenuDigital","menuEscogido","guardarMenuEscogido","sesionIndividualAux","InputGroup","Prepend","Text","type","placeholder","style","flex","Pica√±a","Title","Badge","DropdownButton","Dropdown","Item","seleccionarMenu","BackButton","ordenContext","platilloOrdenadoContext","DetallePlatillo","ordensContext","agregarOrden","ordensesionindividual","obtenerOrdenSesionIndividual","agregarPlatilloOrdenado","cantidad","platilloPedido","guardarPlatilloPedido","sesionIndividual","ordenAux","comentario","platilloId","orden","platilloOrdenadoAux","handleChange","guardarPlatilloEnOrdenLocal","sm","ImgOverlay","Group","Label","rows","BackButtonOrden","Orden","platillosOrdenadossContext","platilloOrdenadoOrden","obtenerPlatilloOrdenado","actualizarPlatilloOrdenado","total","decreaseCount","parseInt","increaseCount","Estatus","OBTENER_UN_RESTAURANTE","OBTENER_RESTAURANTES","RESTAURANTE_ACTUAL","MENUS_RESTAURANTE","MENU_ACTUAL","MESAS_RESTAURANTE","MESA_ACTUAL","LIMPIAR_MESA","SECCIONES_MENU","AGREGAR_SECCION","VALIDAR_SECCION","ELIMINAR_SECCION","SECCION_ACTUAL","ACTUALIZAR_SECCION","LIMPIAR_SECCION","PLATILLOS_SECCION","AGREGAR_PLATILLO","VALIDAR_PLATILLO","ELIMINAR_PLATILLO","PLATILLO_ACTUAL","ACTUALIZAR_PLATILLO","LIMPIAR_PLATILLO","SESIONGENERAL_MESA","AGREGAR_SESIONGENERAL","VALIDAR_SESIONGENERAL","ELIMINAR_SESIONGENERAL","SESIONGENERAL_ACTUAL","ACTUALIZAR_SESIONGENERAL","LIMPIAR_SESIONGENERAL","SESIONINDIVIDUAL_SESIONGENERAL","AGREGAR_SESIONINDIVIDUAL","VALIDAR_SESIONINDIVIDUAL","ELIMINAR_SESIONINDIVIDUAL","SESIONINDIVIDUAL_ACTUAL","ACTUALIZAR_SESIONINDIVIDUAL","LIMPIAR_SESIONINDIVIDUAL","ORDEN_SESIONINDIVIDUAL","ORDEN_RESTAURANTE","AGREGAR_ORDEN","VALIDAR_ORDEN","ELIMINAR_ORDEN","ORDEN_ACTUAL","ACTUALIZAR_ORDEN","LIMPIAR_ORDEN","PLATILLOORDENADO_ORDEN","AGREGAR_PLATILLOORDENADO","VALIDAR_PLATILLOORDENADO","ELIMINAR_PLATILLOORDENADO","PLATILLOORDENADO_ACTUAL","ACTUALIZAR_PLATILLOORDENADO","LIMPIAR_PLATILLOORDENADO","state","action","payload","clienteAxios","axios","create","baseURL","process","RestauranteState","props","useReducer","restauranteReducer","errorformulario","mensaje","dispatch","obtenerRestaurantes","a","get","resultado","data","msg","categoria","params","Provider","mostrarFormulario","mostrarError","children","filter","mesaseleccionada","MesaState","MesaReducer","errormesa","mesas","limpiarMesa","MenuState","MenuReducer","errormenu","menuseleccionado","menus","menuId","limpiarMenu","errorseccion","seccionseleccionada","SeccionState","SeccionReducer","secciones","agregarSeccion","post","eliminarSeccion","delete","timeLog","actualizarSeccion","put","validarSeccion","seccionId","limpiarSeccion","errorplatillo","platilloseleccionado","PlatilloState","PlatilloReducer","platillos","agregarPlatillo","eliminarPlatillo","actualizarPlatillo","validarPlatillo","limpiarPlatillo","errorsesiongeneral","sesiongeneral","sesiongeneralseleccionada","SesionGeneralState","SesionGeneralReducer","sesionesGenerales","eliminarSesionGeneral","actualizarSesionGeneral","validarSesionGeneral","guardarSesionGeneralActual","sesiongeneralId","limpiarSesionGeneral","errorsesionindividual","sesionindividual","sesionindividualseleccionada","SesionIndividualState","SesionIndividualReducer","sesionesIndividuales","eliminarSesionIndividual","actualizarSesionIndividual","validarSesionIndividual","guardarSesionIndividualActual","sesionindividualId","limpiarSesionIndividual","ordenrestaurante","errororden","ordenseleccionada","OrdenState","OrdenReducer","ordenes","obtenerOrdenRestaurante","eliminarOrden","actualizarOrden","validarOrden","guardarOrdenActual","ordenId","limpiarOrden","errorplatilloordenado","platilloOrdenado","platilloordenadoseleccionado","PlatilloOrdenadoState","PlatilloOrdenadoReducer","platilloordenado","platillosOrdenados","eliminarPlatilloOrdenado","validarPlatilloOrdenado","guardarPlatilloOrdenadoActual","platilloordenadoId","limpiarPlatilloOrdenado","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbc4d29b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_waitqr.479233c3.png\";","import {createContext} from 'react';\r\n\r\nconst restauranteContext = createContext();\r\n\r\nexport default restauranteContext;","import {createContext} from 'react';\r\nconst mesaContext = createContext();\r\nexport default mesaContext;","import {createContext} from 'react';\r\nconst sesionGeneralContext = createContext();\r\nexport default sesionGeneralContext;","import {createContext} from 'react';\r\nconst sesionIndividualContext = createContext();\r\nexport default sesionIndividualContext;","import React, {useContext, useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Form, Button, Card, Container } from 'react-bootstrap';\r\nimport \"./styles.css\"\r\nimport Logo from './logo_waitqr.png';\r\n\r\nimport restauranteContext from '../context/restaurantes/restauranteContext';\r\nimport mesasContext from '../context/mesas/mesasContext';\r\nimport sesionGeneralContext from '../context/sesionesGenerales/sesionGeneralContext';\r\nimport sesionIndividualContext from '../context/sesionesIndividuales/sesionIndividualContext';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Welcome() {\r\n\r\n    let history = useHistory();\r\n //Extraer restaurantes de state inicial\r\n const restaurantesContext = useContext(restauranteContext);\r\n const { restaurantes, obtenerUnRestaurante, guardarRestauranteActual} = restaurantesContext;\r\n\r\n const mesassContext = useContext(mesasContext);\r\n const { mesasrestaurante, mesa, obtenerMesas, guardarMesaActual} = mesassContext;\r\n\r\n const sesionGeneralsContext = useContext(sesionGeneralContext);\r\n const {sesiongeneralmesa, obtenerSesionGeneral, agregarSesionGeneral} = sesionGeneralsContext;\r\n \r\n const sesionIndividualsContext = useContext(sesionIndividualContext);\r\n const { sesionindividualsesiongeneral, obtenerSesionIndividual, agregarSesionIndividual} = sesionIndividualsContext;\r\n\r\n const[error, guardarError] = useState(false)\r\n\r\n\r\n const [seleccion, guardarSeleccion] = useState({\r\n     restauranteId: \"\",\r\n     mesaId:\"\"\r\n })\r\n\r\n const [ sesionGeneralAux, guardarSesionGeneralAux] = useState({\r\n\r\n     horarioInicio: '',\r\n     mesa: '',\r\n     restaurante:''\r\n })\r\n\r\n \r\n\r\n const [formulario, guardarFormulario] = useState({\r\n     mesaNombre : ''\r\n })\r\n\r\n const {mesaNombre} = formulario\r\n\r\n\r\n\r\n const {restauranteId, mesaId} = seleccion\r\n\r\n const [ sesionIndividualAux, guardarSesionIndividualAux] = useState({\r\n    \r\n    horarioInicio: '',\r\n    sesionGeneral: '',\r\n    restaurante:''\r\n})\r\n\r\n\r\n useEffect(() => {\r\n    obtenerUnRestaurante(\"5fd817645515ba5728db0adc\");\r\n    obtenerMesas(\"5fd817645515ba5728db0adc\");\r\n    obtenerSesionGeneral(sesionGeneralAux.mesa)\r\n\r\n    \r\n}, []); //para que corra solo una vez\r\n\r\nseleccion.restauranteId = restaurantes._id\r\n\r\n//leer los valores del formulario\r\n\r\nconst handleChange = e => {\r\n    guardarFormulario({\r\n        ...formulario,\r\n        [e.target.name]: e.target.value\r\n      })\r\n    let obj = JSON.parse(e.target.value);\r\n    guardarMesaActual(obj._id)\r\n    sesionGeneralAux.mesa = obj._id\r\n    guardarRestauranteActual(\"5fd817645515ba5728db0adc\")\r\n    console.log(mesa)\r\n    \r\n  };\r\n\r\n  const revisarFormulario = e =>{\r\n      console.log(\"presione el boton\")\r\n    if(formulario.mesaNombre === ''){\r\n      guardarError(true);\r\n      return\r\n      \r\n    }\r\n    if(!localStorage.getItem('sesiongenerallocal')){ //si no hay sesiongenerallocal\r\n        if(sesiongeneralmesa.length>0){\r\n          \r\n            localStorage.setItem('mesalocal', sesionGeneralAux.mesa);\r\n            //localStorage.setItem('sesiongeneralid', sesiongeneralmesa[0]._id);\r\n            sesiongeneralmesa.length = 0;\r\n            obtenerSesionGeneral(sesionGeneralAux.mesa)\r\n            console.log(\"ya la mande a cero \"+ sesiongeneralmesa.length )\r\n            history.push(\"/MenuDigital\");\r\n        }\r\n        else{\r\n            sesionGeneralAux.horarioInicio = new Date().toLocaleString(\"en-GB\", {timeZone: 'America/Mexico_City'})\r\n            sesionGeneralAux.restaurante =  restaurantes._id\r\n            agregarSesionGeneral(sesionGeneralAux)\r\n            localStorage.setItem('mesalocal', sesionGeneralAux.mesa);\r\n            sesiongeneralmesa.length = 0;\r\n            obtenerSesionGeneral(sesionGeneralAux.mesa)\r\n            console.log(\"ya la mande a cero \"+ sesiongeneralmesa.length )\r\n\r\n            history.push(\"/MenuDigital\");\r\n        }\r\n              \r\n             \r\n          }\r\n    else\r\n    {\r\n        history.push(\"/MenuDigital\");\r\n    }\r\n    \r\n          \r\n          \r\n      \r\n      \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container fluid className=\"bienvenido\">\r\n            <Row>\r\n                <Col>\r\n                    <h3>Bienvenido a</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <h1>{restaurantes.nombre}</h1>\r\n                </Col>\r\n            </Row>\r\n            <Form >\r\n            <Row className=\"align-middle\">\r\n                <h2>Confirma tu mesa</h2>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"mesa\">\r\n                \r\n                <Form.Control\r\n                onChange={handleChange}\r\n                name=\"mesaNombre\"\r\n                className=\"mesa\" title=\"mesa 1\" as=\"select\">\r\n                <option>Selecciona una mesa</option>\r\n                {mesasrestaurante.map(mesa => (\r\n\r\n                                <option\r\n                                key={mesa._id}\r\n                                value = {JSON.stringify(mesa)}\r\n                                >{mesa.numero}</option>\r\n                                ))}          \r\n                </Form.Control>\r\n                 \r\n                </Col>\r\n                \r\n\r\n            </Row>\r\n            {error?\r\n                <div className=\"text-center mt-4\">\r\n                    <p id=\"alerta \">Falto seleccionar una mesa</p>\r\n                </div>\r\n                : null}\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <Row>\r\n                <Col className=\"boton-ordenar\">\r\n                   \r\n                    \r\n                        <Button  className=\"confirmar mt-3\" onClick={() => revisarFormulario()}>Confirmar</Button>\r\n                    \r\n                </Col>\r\n            </Row>\r\n            </Form>\r\n            <Row>\r\n                <Col className=\"boton-logo\">\r\n                    <Card.Img className=\"logo\" variant=\"top\" src={Logo} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default Welcome;","export default __webpack_public_path__ + \"static/media/picana-t.b08aab4b.jpg\";","import {createContext} from 'react';\r\nconst menuContext = createContext();\r\nexport default menuContext;","import {createContext} from 'react';\r\nconst seccionContext = createContext();\r\nexport default seccionContext;","import {createContext} from 'react';\r\nconst platillosContext = createContext();\r\nexport default platillosContext;","export default __webpack_public_path__ + \"static/media/papas-gajo.f540fc8b.jpg\";","import React, { useEffect, useContext, useState } from 'react'\r\nimport { Form, Card, Col, Row, Accordion, Badge, Container, InputGroup } from 'react-bootstrap';\r\nimport Papas from './papas-gajo.jpg';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nimport platillosContext from '../context/platillos/platillosContext';\r\n\r\nfunction MenuPlatillo({seccionSeleccionada}){\r\n\r\n  console.log(\"llego esta seccion \" + seccionSeleccionada.nombre)\r\n    const platillossContext = useContext(platillosContext);\r\n    const { platillosseccion, platillo, obtenerPlatillos, guardarPlatilloActual } = platillossContext;\r\n  \r\n    \r\n    useEffect(() => {\r\n    \r\n        obtenerPlatillos(seccionSeleccionada._id);\r\n      }, [seccionSeleccionada]);\r\n\r\n      //TO-DO\r\n      //Mover ese Link para no perder el CSS, ahorita es meramente funcional\r\n\r\n\r\n    return(\r\n      \r\n        <Container className=\"contenedor-platillo\">\r\n              {platillosseccion.map((platillo, i) => (\r\n                <Row  >\r\n                  \r\n                  <Col xs={3}\r\n                  onClick={() => guardarPlatilloActual(platillo)}\r\n                  >\r\n                  <Link to={'/DetallePlatillo'}> \r\n                    <Card.Img className=\"imagen-platillo img-fluid mt-4\" variant=\"top\" src={platillo.imagenPlatillo} />\r\n                    </Link>\r\n                    </Col>\r\n                  <Col xs={6}\r\n                  onClick={() => guardarPlatilloActual(platillo)}\r\n                  >\r\n                  <Link to={'/DetallePlatillo'}> \r\n                    <h3 className=\"mt-3\" >{platillo.nombre}</h3>\r\n                  <p>{platillo.descripcion}</p>\r\n                  </Link>\r\n                  </Col>\r\n                  <Col xs={3}\r\n                  onClick={() => guardarPlatilloActual(platillo)}\r\n                  >\r\n                  <Link to={'/DetallePlatillo'}> \r\n                    <h3 className=\"mt-3\" >${platillo.precio}</h3>\r\n                    </Link>\r\n                    </Col>\r\n                  \r\n                </Row>\r\n                 ))}\r\n              </Container>\r\n       \r\n    );\r\n}\r\n\r\nexport default MenuPlatillo;","import React, {useEffect, useContext, useState} from 'react';\r\nimport { Form, Card, Col, Row, Accordion, Badge, Container, InputGroup } from 'react-bootstrap';\r\n\r\n\r\nimport menusContext from '../context/menus/menusContext';\r\nimport seccionesContext from '../context/secciones/seccionesContext';\r\nimport MenuPlatillo from './MenuPlatillo';\r\n\r\nfunction Menu({menu}){\r\n\r\n    const menussContext = useContext(menusContext);\r\n    const { menusrestaurante, obtenerMenus, guardarMenuActual } = menussContext;\r\n\r\n    //obtener la funcion del context de seccion\r\n  const seccionessContext = useContext(seccionesContext);\r\n  const {seccion,seccionesmenu, obtenerSecciones, guardarSeccionActual} = seccionessContext;\r\n\r\n  useEffect(() => {\r\n    obtenerSecciones(menu[0]._id);\r\n  }, [menu]);\r\n\r\n  const [seccionSeleccionada, guardarSeccionSeleccionada] = useState({});\r\n\r\n  const seleccionarSeccion = seccion =>{\r\n    console.log(\"seleccione:\" + seccion.nombre)\r\n    guardarSeccionActual(seccion._id)\r\n    guardarSeccionSeleccionada(seccion)\r\n    console.log(\"seccionSeleccionada\" + seccionSeleccionada.nombre)\r\n}\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n    <Accordion defaultActiveKey=\"0\">\r\n        {seccionesmenu.map(seccion => (\r\n        <Card>\r\n        \r\n          <Accordion.Toggle as={Card.Header}  key={seccion._id}  eventKey={seccion._id} onClick={() => seleccionarSeccion(seccion)}>\r\n            <h3 className=\"mt-2\">{seccion.nombre}</h3>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse key={seccion._id}  eventKey={seccion._id}>\r\n            <Card.Body>\r\n              <MenuPlatillo\r\n              seccionSeleccionada = {seccionSeleccionada}\r\n              />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        ))}\r\n        \r\n      </Accordion>\r\n      <br/><br/>\r\n          </>\r\n\r\n    );\r\n  \r\n}\r\n\r\nexport default Menu;","import React, {useEffect, useContext, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Card, Col, Row, Accordion, Badge, Container, InputGroup, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Pica√±a from './Menu/picana-t.jpg';\r\n\r\nimport restauranteContext from '../context/restaurantes/restauranteContext';\r\nimport mesasContext from '../context/mesas/mesasContext';\r\nimport menusContext from '../context/menus/menusContext';\r\nimport sesionGeneralContext from '../context/sesionesGenerales/sesionGeneralContext';\r\nimport sesionIndividualContext from '../context/sesionesIndividuales/sesionIndividualContext';\r\n\r\nimport Menu from './Menu';\r\n\r\nimport './Menu/menucliente.css'\r\nimport Papas from \"./papas-gajo.jpg\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\n\r\nimport \"./Menu/menucliente.css\";\r\nimport { Divider } from \"@material-ui/core\";\r\n\r\n\r\nfunction MenuDigital() {\r\n\r\n   //Extraer restaurantes de state inicial\r\n const restaurantesContext = useContext(restauranteContext);\r\n const { restaurantes, restaurante, obtenerUnRestaurante, guardarRestauranteActual} = restaurantesContext;\r\n\r\n const mesassContext = useContext(mesasContext);\r\n const { mesasrestaurante, mesa, obtenerMesas, guardarMesaActual} = mesassContext;\r\n\r\n const menussContext = useContext(menusContext);\r\n    const { menusrestaurante, menu, obtenerMenus, guardarMenuActual } = menussContext;\r\n\r\n    const sesionGeneralsContext = useContext(sesionGeneralContext);\r\n    const { sesiongeneralmesa, obtenerSesionGeneral, agregarSesionGeneral} = sesionGeneralsContext;\r\n\r\n    const sesionIndividualsContext = useContext(sesionIndividualContext);\r\n    const { sesionindividualsesiongeneral, obtenerSesionIndividual, agregarSesionIndividual} = sesionIndividualsContext;\r\n\r\n  \r\n\r\n\r\n    const [menuEscogido, guardarMenuEscogido] = useState('');\r\n\r\n    const [ sesionIndividualAux, guardarSesionIndividualAux] = useState({\r\n    \r\n      horarioInicio: '',\r\n      sesionGeneral: '',\r\n      restaurante:''\r\n  })\r\n\r\n useEffect(() => {\r\n  \r\n  obtenerMenus(restaurante)\r\n  obtenerSesionGeneral(mesa[0]._id);\r\n  \r\n  \r\n},[]);\r\nlocalStorage.setItem('restaurantelocal', restaurante);\r\nconsole.log(sesiongeneralmesa)\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Funcion para agregar el menu actual\r\nconst seleccionarMenu = menu => {\r\n  guardarMenuActual(menu._id); //fijar un menu actual\r\n  guardarMenuEscogido(menu.nombre);\r\n  console.log(sesiongeneralmesa)\r\n\r\n \r\n  if(sesiongeneralmesa.length>0){\r\n    if(!localStorage.getItem('sesionindividualid')){\r\n  \r\n      sesionIndividualAux.horarioInicio = new Date().toLocaleString(\"en-GB\", {timeZone: 'America/Mexico_City'})\r\n      sesionIndividualAux.restaurante =  restaurantes._id\r\n      console.log(sesiongeneralmesa)\r\n  \r\n      sesionIndividualAux.sesionGeneral =  sesiongeneralmesa[0]._id\r\n    \r\n      console.log(JSON.stringify(sesionIndividualAux.sesionGeneral))\r\n     \r\n    \r\n      agregarSesionIndividual(sesionIndividualAux)\r\n      \r\n      \r\n      \r\n    \r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"menu-principal\">\r\n      <h1>{restaurantes.nombre}</h1>\r\n      <p>{mesa[0].numero}</p>\r\n      <Link to={\"/Orden\"}>\r\n        <ShoppingCartIcon className=\"carrito-menu\" />\r\n      </Link>\r\n\r\n      <InputGroup className=\"searchbar\">\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text id=\"basic-addon1\">\r\n            <SearchIcon />\r\n          </InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <Form.Control type=\"text\" placeholder=\"Busca un platillo\" />\r\n      </InputGroup>\r\n\r\n      <h2>Lo m√°s recomendado</h2>\r\n     \r\n        <Card className=\"mb-4\" style={{ flex: 1 }}>\r\n        <Link to={'/DetallePlatillo'}>\r\n          <Card.Img variant=\"top\" src={Pica√±a} />\r\n          <Card.Body>\r\n            <Card.Title>\r\n              <Row>\r\n                <Col className=\"ml-n2\">\r\n                  <h2>Pica√±a Haye</h2>\r\n                </Col>\r\n                <Col>\r\n                  <Badge className=\"badge ml-4\" variant=\"primary\">El m√°s pedido</Badge>\r\n                </Col>\r\n              </Row>\r\n            </Card.Title>\r\n            <Card.Text>\r\n              <p1>Deliciosa Pica√±a Haye</p1>\r\n            </Card.Text>\r\n            <Card.Text>\r\n              <p1>$365.00</p1>\r\n            </Card.Text>\r\n          </Card.Body>\r\n          </Link>\r\n        </Card>\r\n\r\n        <Form >\r\n            <Row>\r\n                <Col className=\"mesa\">\r\n                \r\n                <DropdownButton\r\n                >\r\n                <Dropdown.Item>Selecciona un menu</Dropdown.Item>\r\n                {\r\n                menusrestaurante.map(menu => (\r\n                                <Dropdown.Item\r\n                                onClick={() => seleccionarMenu(menu)}\r\n                                >{menu.nombre}</Dropdown.Item>\r\n                                ))}          \r\n                </DropdownButton>\r\n                 \r\n                </Col>\r\n            </Row>\r\n            </Form>\r\n                  {\r\n                    menuEscogido ?(\r\n                      <Menu\r\n                      menu={menu}\r\n                    />)\r\n                    :(<p>Escoge un menu</p>\r\n                      )\r\n                      \r\n                  }\r\n            \r\n\r\n      \r\n    </div>\r\n  );\r\n\r\n\r\n\r\n}\r\n\r\nexport default MenuDigital;\r\n","import React from \"react\";\r\nimport {  Button, Container } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport '../styles.css'\r\n\r\nfunction BackButton() {\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <Container>\r\n            <Button className=\"boton-back\" onClick={() =>history.push(\"/MenuDigital\")}><ArrowBackIcon/></Button>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default BackButton;","import {createContext} from 'react';\r\nconst ordenContext = createContext();\r\nexport default ordenContext;","import {createContext} from 'react';\r\nconst platilloOrdenadoContext = createContext();\r\nexport default platilloOrdenadoContext;","import React, { useEffect, useContext, useState } from 'react'\r\nimport { Card, Col, Row, Button, Form, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Pica√±a from './Menu/picana-t.jpg';\r\nimport BackButton from './Buttons/BackButton';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport './styles.css'\r\n\r\nimport platillosContext from '../context/platillos/platillosContext';\r\nimport ordenContext from '../context/ordenes/ordenContext';\r\nimport restauranteContext from '../context/restaurantes/restauranteContext';\r\nimport mesasContext from '../context/mesas/mesasContext';\r\nimport platilloOrdenadoContext from '../context/platillosOrdenados/platilloOrdenadoContext';\r\n\r\n\r\n\r\nfunction DetallePlatillo() {\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    const platillossContext = useContext(platillosContext);\r\n    const { platillosseccion, platillo, obtenerPlatillos, guardarPlatilloActual } = platillossContext;\r\n\r\n    const ordensContext = useContext(ordenContext);\r\n    const {  ordensesionindividual, obtenerOrdenSesionIndividual, agregarOrden} = ordensContext;\r\n    const  platillosOrdenadossContext = useContext(platilloOrdenadoContext);\r\n    const { agregarPlatilloOrdenado} = platillosOrdenadossContext;\r\n\r\n    const mesassContext = useContext(mesasContext);\r\n    const {  mesa} = mesassContext;\r\n    const restaurantesContext = useContext(restauranteContext);\r\n const { restaurante} = restaurantesContext;\r\n\r\n    const [platilloPedido, guardarPlatilloPedido] = useState({\r\n        cantidad: \"1\",\r\n        descripcion: \"\"\r\n\r\n    })\r\n\r\n    const {cantidad, descripcion} = platilloPedido;\r\n\r\n    const [ ordenAux, guardarOrdenAux] = useState({\r\n\r\n        sesionIndividual: '',\r\n        sesionGeneral: '',\r\n        restaurante:'',\r\n        mesa:'',\r\n\r\n    });\r\n    const [ platilloOrdenadoAux, guardarPlatilloOrdenadoAux] = useState({\r\n\r\n        nombre: '',\r\n        precio: '',\r\n        cantidad:'',\r\n        comentario:'',\r\n        platilloId:'',\r\n        orden:'',\r\n        restaurante:'',\r\n        sesionIndividual:'',\r\n        sesionGeneral:'',\r\n        mesa:'',\r\n\r\n    });\r\n   \r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem('ordenid')){\r\n            ordenAux.sesionIndividual=localStorage.getItem('sesionindividualid');\r\n            ordenAux.sesionGeneral=localStorage.getItem('sesiongeneralid');\r\n            ordenAux.restaurante = localStorage.getItem('restaurantelocal');;\r\n            ordenAux.mesa= localStorage.getItem('mesalocal');\r\n            agregarOrden(ordenAux)\r\n            \r\n         }\r\n        \r\n      },[]);\r\n\r\n     \r\n\r\n\r\n    const handleChange = e => {\r\n        guardarPlatilloPedido({\r\n            ...platilloPedido,\r\n            [e.target.name]: e.target.value\r\n          })\r\n      };\r\n\r\n\r\n   // console.log(\"llego este platillo\" + platillo.nombre)\r\n\r\n   const crearPlatilloOrdenado = e =>{\r\n    platilloOrdenadoAux.nombre = platillo.nombre;\r\n    platilloOrdenadoAux.precio = platillo.precio;\r\n    platilloOrdenadoAux.cantidad = cantidad;\r\n    platilloOrdenadoAux.comentario = descripcion;\r\n    platilloOrdenadoAux.platilloId = platillo._id;\r\n    platilloOrdenadoAux.orden = localStorage.getItem('ordenid');\r\n    platilloOrdenadoAux.restaurante = localStorage.getItem('restaurantelocal');\r\n    platilloOrdenadoAux.sesionIndividual = localStorage.getItem('sesionindividualid');\r\n    platilloOrdenadoAux.sesionGeneral = localStorage.getItem('sesiongeneralid');\r\n    platilloOrdenadoAux.mesa = localStorage.getItem('mesalocal');\r\n    agregarPlatilloOrdenado(platilloOrdenadoAux)\r\n    history.push(\"/MenuDigital\")\r\n   }\r\n    \r\n\r\n    const guardarPlatilloEnOrdenLocal = e => {\r\n\r\n        \r\n         crearPlatilloOrdenado();\r\n\r\n           \r\n         \r\n\r\n     \r\n\r\n        }\r\n\r\n\r\n    \r\n    return (\r\n\r\n        \r\n        <Container fluid>\r\n            <Row>\r\n                <Col sm={12} className=\"detalle-platillo\">\r\n                    <Card className=\"platillo\">\r\n                        <Card.ImgOverlay>\r\n                            <BackButton className=\"mt-4\"/>\r\n                        </Card.ImgOverlay>\r\n                        <Card.Img className=\"imagen-detalle\" variant=\"top\" src={platillo.imagenPlatillo} />\r\n                        <Card.Body>\r\n                            <Card.Title className=\"font-weight-bold\">\r\n                                <h1>{platillo.nombre}</h1>\r\n                            </Card.Title>\r\n                            <Card.Text className=\"mt-3\">\r\n                                <h2>{platillo.descripcion}</h2>\r\n                            </Card.Text>\r\n                            <Card.Text className=\"mt-2\">\r\n                                <h3>${platillo.precio}</h3>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Form className=\"form-cantidad\" \r\n                 \r\n                >\r\n                    <Form.Group className=\"input-cantidad mt-3 ml-4\">\r\n                            <Form.Label>Cantidad</Form.Label>\r\n                            <Form.Control className=\"input-cantidad\" as=\"select\"\r\n                             name=\"cantidad\"\r\n                             value={cantidad}\r\n                             onChange={handleChange}>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Row>\r\n            <Row>\r\n                <Form>\r\n                    <Form.Group className=\"input-notas ml-4\">\r\n                        <textarea className=\"input-notas-texto form-control\" rows=\"3\" placeholder=\"Notas para la cocina\"\r\n                        name=\"descripcion\"\r\n                        value={descripcion}\r\n                        onChange={handleChange}></textarea>\r\n                        \r\n                    </Form.Group>\r\n                </Form>\r\n            </Row>\r\n            <Row>\r\n                \r\n                <Col className=\"boton-ordenar\">\r\n                   {/* <Link to={'/Orden'}> */}\r\n                        <Button className=\"confirmar\" onClick={() => guardarPlatilloEnOrdenLocal()}>Agregar</Button>\r\n                     {/*</Link>*/}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DetallePlatillo;","import React from \"react\";\r\nimport { Button, Container, Col } from \"react-bootstrap\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport \"../styles.css\";\r\n\r\n\r\nfunction BackButtonOrden() {\r\n\r\n  return (\r\n    <Container>\r\n      <Link to={\"/MenuDigital\"}>\r\n        <Button className=\"boton-back\" >\r\n          <ArrowBackIcon />\r\n        </Button>\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default BackButtonOrden;","import React, { useState,useContext, useEffect } from \"react\";\r\nimport { Card, Col, Row, Badge, Button, Form, Container } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport './styles.css';\r\nimport BackButtonOrden from './Buttons/BackButtonOrden';\r\nimport { Prev } from \"react-bootstrap/esm/PageItem\";\r\n\r\nimport platilloOrdenadoContext from '../context/platillosOrdenados/platilloOrdenadoContext';\r\n\r\n\r\nfunction Orden() {\r\n\r\n    const  platillosOrdenadossContext = useContext(platilloOrdenadoContext);\r\n    const { platilloOrdenadoOrden, obtenerPlatilloOrdenado, actualizarPlatilloOrdenado} = platillosOrdenadossContext;\r\n\r\n    useEffect(() => {\r\n        obtenerPlatilloOrdenado(localStorage.getItem('ordenid'))\r\n           \r\n        \r\n      },[]);\r\n\r\n      console.log(platilloOrdenadoOrden)\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    const increaseCount= platillo => {\r\n       platillo.cantidad = platillo.cantidad+1;\r\n        actualizarPlatilloOrdenado(platillo)\r\n        history.push(\"/Orden\")\r\n    }\r\n\r\n    const decreaseCount= platillo => {\r\n        platillo.cantidad = platillo.cantidad-1;\r\n        actualizarPlatilloOrdenado(platillo)\r\n    }\r\n\r\n    var total = 0\r\n    platilloOrdenadoOrden.map(platillo => (\r\n        total = (platillo.precio * platillo.cantidad) + total\r\n    ))\r\n\r\n\r\n    return (\r\n        <Container fluid className=\"orden\">\r\n            <Row>\r\n                <Col className=\"\" >\r\n                    <BackButtonOrden className=\"boton-back-orden\"/>\r\n                </Col>\r\n                <Col className=\"titulo-carrito mt-4\" >\r\n                    <h1>Carrito</h1>\r\n                </Col>\r\n                <Col className=\"mt-4\" >\r\n                    <ShoppingCartIcon className=\"carrito\"/>\r\n                </Col>\r\n            </Row>\r\n            \r\n            <Row>\r\n                <Col className=\"mt-4 mb-2\">\r\n                    <h3>Entradas</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"platillos\">\r\n                <Col>\r\n                {\r\n                platilloOrdenadoOrden.map(platillo => (\r\n                    <Card className=\"platillo-orden mb-2\">\r\n                    <Card.Text className=\"mr-4 ml-1 mt-3 mb-n2\">{platillo.nombre}</Card.Text>\r\n                    <Card.Text className=\"ml-4 mt-3\">${platillo.precio}</Card.Text>\r\n                    <IndeterminateCheckBoxIcon onClick={() =>decreaseCount(platillo)} className=\"menos mt-3\"/>\r\n                    <Card.Text className=\"platillo-orden-cantidad mt-3\">{parseInt(platillo.cantidad,10)}</Card.Text>\r\n                    <AddBoxIcon  onClick={() => increaseCount(platillo)} className=\"mas mt-3\"/>\r\n                </Card>\r\n                                ))}    \r\n                    \r\n                    \r\n                </Col>\r\n            </Row>\r\n            <Row className=\"total\">\r\n                <Col className=\"total-titulo\">\r\n                    <h1>Total</h1>\r\n                </Col>\r\n                <Col className=\"total-texto\">\r\n                    <h1>${total}</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"boton-ordenar\">\r\n                    <Link to={'/estatus'}>\r\n                        <Button className=\"confirmar\" variant=\"primary\">Confirmar</Button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Orden;","import React, { useState,useContext, useEffect } from \"react\";\r\n\r\nimport { Card, Col, Row, Button, Container } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport Logo from \"./logo_waitqr.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport platilloOrdenadoContext from '../context/platillosOrdenados/platilloOrdenadoContext';\r\n\r\n\r\nfunction Estatus() {\r\n  let history = useHistory();\r\n\r\n  const  platillosOrdenadossContext = useContext(platilloOrdenadoContext);\r\n    const { platilloOrdenadoOrden, obtenerPlatilloOrdenado, actualizarPlatilloOrdenado} = platillosOrdenadossContext;\r\n\r\n  useEffect(() => {\r\n    obtenerPlatilloOrdenado(localStorage.getItem('ordenid'))\r\n       \r\n    \r\n  },[]);\r\n\r\n  return (\r\n    <Container className=\"estatus\" fluid>\r\n      <Row>\r\n        <Col className=\"estatus-titulo  ml-auto mr-auto\">\r\n          <h1>Tu √≥rden ha sido recibida</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <h2>√ìrden #1</h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"resumen-orden-row\">\r\n      <Card className=\"resumen-orden-card ml-auto mr-auto \">\r\n      {\r\n                platilloOrdenadoOrden.map(platillo => (\r\n                   <span>\r\n                    <Card.Text className=\"nombre-platillo mt-1 ml-2 mb-n1\">{platillo.cantidad} X {platillo.nombre}</Card.Text>\r\n                    <Card.Text className=\"comentatrios-platillo ml-4\">{platillo.comentario}</Card.Text>\r\n                    </span>\r\n               \r\n                                ))}   \r\n        \r\n         \r\n          \r\n          \r\n          \r\n        </Card>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"logo-texto\">\r\n          <h3>Powered by</h3>\r\n        </Col>\r\n        <Col className=\"logo-estatus mr-auto ml-auto\">\r\n          <Card.Img className=\"logo\" variant=\"top\" src={Logo} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"boton-ordenar\">\r\n          <Link to={\"/MenuDigital\"}>\r\n            <Button className=\"confirmar mt-3\">Ordenar Algo M√°s</Button>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Estatus;\r\n","export const FORMULARIO_RESTAURANTE = 'FORMULARIO_RESTAURANTE' \r\nexport const OBTENER_UN_RESTAURANTE = 'OBTENER_RESTAURANTES'\r\nexport const OBTENER_RESTAURANTES = 'OBTENER_RESTAURANTES' \r\nexport const AGREGAR_RESTAURANTE = 'AGREGAR_RESTAURANTE' \r\nexport const RESTAURANTE_ACTUAL = ' RESTAURANTE_ACTUAL'\r\nexport const ELIMINAR_RESTAURANTE = 'ELIMINAR_RESTAURANTE'\r\nexport const RESTAURANTE_ERROR = 'RESTAURANTE_ERROR'\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\n\r\n\r\nexport const MENUS_RESTAURANTE = 'MENUS_RESTAURANTE';\r\nexport const AGREGAR_MENU = 'AGREGAR_MENU';\r\nexport const VALIDAR_MENU = 'VALIDAR_MENU';\r\nexport const ELIMINAR_MENU = 'ELIMINAR_MENU'\r\nexport const ESTADO_MENU = \"ESTADO_MENU\"\r\nexport const MENU_ACTUAL = \"MENU_ACTUAL\";\r\nexport const ACTUALIZAR_MENU = 'ACTUALIZAR_MENU'\r\nexport const LIMPIAR_MENU = 'LIMPIAR_MENU'\r\n\r\nexport const MESAS_RESTAURANTE = 'MESAS_RESTAURANTE';\r\nexport const AGREGAR_MESA = 'AGREGAR_MESA';\r\nexport const VALIDAR_MESA = 'VALIDAR_MESA';\r\nexport const ELIMINAR_MESA = 'ELIMINAR_MESA'\r\nexport const ESTADO_MESA = \"ESTADO_MESA\"\r\nexport const MESA_ACTUAL = \"MESA_ACTUAL\";\r\nexport const ACTUALIZAR_MESA = 'ACTUALIZAR_MESA'\r\nexport const LIMPIAR_MESA = 'LIMPIAR_MESA'\r\n\r\n\r\nexport const SECCIONES_MENU = 'SECCIONES_MENU';\r\nexport const AGREGAR_SECCION = 'AGREGAR_SECCION';\r\nexport const VALIDAR_SECCION = 'VALIDAR_SECCION';\r\nexport const ELIMINAR_SECCION = 'ELIMINAR_SECCION'\r\nexport const ESTADO_SECCION = \"ESTADO_SECCION\"\r\nexport const SECCION_ACTUAL = \"SECCION_ACTUAL\";\r\nexport const ACTUALIZAR_SECCION = 'ACTUALIZAR_SECCION'\r\nexport const LIMPIAR_SECCION = 'LIMPIAR_SECCION'\r\n\r\nexport const PLATILLOS_SECCION = 'PLATILLOS_SECCION';\r\nexport const AGREGAR_PLATILLO = 'AGREGAR_PLATILLO';\r\nexport const VALIDAR_PLATILLO = 'VALIDAR_PLATILLO';\r\nexport const ELIMINAR_PLATILLO = 'ELIMINAR_PLATILLO'\r\nexport const ESTADO_PLATILLO = \"ESTADO_PLATILLO\"\r\nexport const PLATILLO_ACTUAL = \"PLATILLO_ACTUAL\";\r\nexport const ACTUALIZAR_PLATILLO = 'ACTUALIZAR_PLATILLO'\r\nexport const LIMPIAR_PLATILLO = 'LIMPIAR_PLATILLO'\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\n\r\nexport const REGISTRO_EXISTOSO = \"REGISTRO_EXITOSO\";\r\nexport const REGISTRO_ERROR = \"REGISTRO_ERROR\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const LOGIN_EXITOSO = \"LOGIN_EXITOSO\";\r\nexport const CERRAR_SESION = 'CERRAR_SESION';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\n \r\nexport const SESIONGENERAL_MESA = 'SESIONGENERAL_MESA';\r\nexport const AGREGAR_SESIONGENERAL = 'AGREGAR_SESIONGENERAL';\r\nexport const VALIDAR_SESIONGENERAL = 'VALIDAR_SESIONGENERAL';\r\nexport const ELIMINAR_SESIONGENERAL = 'ELIMINAR_SESIONGENERAL'\r\nexport const ESTADO_SESIONGENERAL = \"ESTADO_SESIONGENERAL\"\r\nexport const SESIONGENERAL_ACTUAL = \"SESIONGENERAL_ACTUAL\";\r\nexport const ACTUALIZAR_SESIONGENERAL = 'ACTUALIZAR_SESIONGENERAL'\r\nexport const LIMPIAR_SESIONGENERAL = 'LIMPIAR_SESIONGENERAL'\r\n\r\nexport const SESIONINDIVIDUAL_SESIONGENERAL = 'SESIONINDIVIDUAL_SESIONGENERAL';\r\nexport const AGREGAR_SESIONINDIVIDUAL =' AGREGAR_SESIONINDIVIDUAL';\r\nexport const VALIDAR_SESIONINDIVIDUAL = 'VALIDAR_SESIONINDIVIDUAL';\r\nexport const ELIMINAR_SESIONINDIVIDUAL = 'ELIMINAR_SESIONINDIVIDUAL'\r\nexport const ESTADO_SESIONINDIVIDUAL = \"ESTADO_SESIONINDIVIDUAL\"\r\nexport const SESIONINDIVIDUAL_ACTUAL = \"SESIONINDIVIDUAL_ACTUAL\";\r\nexport const ACTUALIZAR_SESIONINDIVIDUAL = 'ACTUALIZAR_SESIONINDIVIDUAL'\r\nexport const LIMPIAR_SESIONINDIVIDUAL = 'LIMPIAR_SESIONINDIVIDUAL'\r\n\r\nexport const ORDEN_SESIONINDIVIDUAL = 'ORDEN_SESIONINDIVIDUAL';\r\nexport const ORDEN_RESTAURANTE = 'ORDEN_RESTAURANTE';\r\nexport const AGREGAR_ORDEN =' AGREGAR_ORDEN';\r\nexport const VALIDAR_ORDEN = 'VALIDAR_ORDEN';\r\nexport const ELIMINAR_ORDEN = 'ELIMINAR_ORDEN'\r\nexport const ESTADO_ORDEN = \"ESTADO_ORDEN\"\r\nexport const ORDEN_ACTUAL = \"ORDEN_ACTUAL\";\r\nexport const ACTUALIZAR_ORDEN = 'ACTUALIZAR_ORDEN'\r\nexport const LIMPIAR_ORDEN = 'LIMPIAR_ORDEN'\r\n\r\nexport const PLATILLOORDENADO_ORDEN = 'PLATILLOORDENADO_ORDEN';\r\nexport const AGREGAR_PLATILLOORDENADO =' AGREGAR_PLATILLOORDENADO';\r\nexport const VALIDAR_PLATILLOORDENADO = 'VALIDAR_PLATILLOORDENADO';\r\nexport const ELIMINAR_PLATILLOORDENADO= 'ELIMINAR_PLATILLOORDENADO'\r\nexport const ESTADO_PLATILLOORDENADO = \"ESTADO_PLATILLOORDENADO\"\r\nexport const PLATILLOORDENADO_ACTUAL = \"PLATILLOORDENADO_ACTUAL\";\r\nexport const ACTUALIZAR_PLATILLOORDENADO = 'ACTUALIZAR_PLATILLOORDENADO'\r\nexport const LIMPIAR_PLATILLOORDENADO = 'LIMPIAR_PLATILLOORDENADO'\r\n","import {OBTENER_RESTAURANTES} from '../../types';\r\nimport {OBTENER_UN_RESTAURANTE} from '../../types';\r\nimport {RESTAURANTE_ACTUAL} from '../../types';\r\n\r\nexport default (state,action) =>{\r\n    switch(action.type){\r\n        \r\n        case OBTENER_RESTAURANTES:\r\n            console.log(action.payload)\r\n            return{\r\n                ...state,\r\n                restaurantes: action.payload\r\n            }\r\n            case OBTENER_UN_RESTAURANTE:\r\n            console.log(action.payload)\r\n            return{\r\n                ...state,\r\n                restaurantes: action.payload\r\n            }\r\n            case RESTAURANTE_ACTUAL:\r\n                return{\r\n                    ...state,\r\n                    restaurante:  action.payload \r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\nconst clienteAxios = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n})\r\n\r\nexport default clienteAxios;","import React, {useReducer} from 'react';\r\n\r\nimport restauranteContext from './restauranteContext';\r\nimport restauranteReducer from './restauranteReducer';\r\nimport {FORMULARIO_RESTAURANTE} from '../../types';\r\nimport {OBTENER_UN_RESTAURANTE} from '../../types';\r\nimport {OBTENER_RESTAURANTES} from '../../types';\r\nimport {AGREGAR_RESTAURANTE} from '../../types';\r\nimport {VALIDAR_FORMULARIO} from '../../types';\r\nimport {RESTAURANTE_ACTUAL} from '../../types';\r\nimport {ELIMINAR_RESTAURANTE} from '../../types';\r\nimport {RESTAURANTE_ERROR} from '../../types';\r\n\r\n\r\n\r\nimport clienteAxios from '../../config/axios';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst RestauranteState = props => {\r\n    const initialState = {\r\n        formulario : false,\r\n        restaurantes:[],\r\n        errorformulario: false,\r\n        restaurante: null,\r\n        mensaje: null  \r\n    }\r\n\r\n    //Dispatch para ejecutar las acciones\r\n    const [state, dispatch] = useReducer(restauranteReducer, initialState)\r\n\r\n    //serie de funciones para el crud\r\n    const mostrarFormulario = () => {\r\n        dispatch({\r\n            type: FORMULARIO_RESTAURANTE\r\n        })\r\n    }\r\n\r\n    //obtener los restaurantes\r\n    const obtenerRestaurantes = async () =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/restaurantes');\r\n\r\n            dispatch({\r\n                type: OBTENER_RESTAURANTES,\r\n                payload: resultado.data.restaurantes\r\n            })\r\n        } catch (error) {\r\n            //console.log(error)\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: RESTAURANTE_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    const obtenerUnRestaurante = async restaurante =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/restaurantes/restaurante',{params:{restaurante}});\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: OBTENER_UN_RESTAURANTE,\r\n                payload: resultado.data.restaurantes\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    //valida el formlario por errores\r\n    const mostrarError = () =>{\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n\r\n    //Selecciona el restaurante que el usuario dio click \r\n    const guardarRestauranteActual = restauranteId =>{\r\n        dispatch({\r\n            type: RESTAURANTE_ACTUAL,\r\n            payload: restauranteId\r\n        })\r\n    }\r\n  \r\n    \r\n\r\n    return(\r\n        <restauranteContext.Provider\r\n            value={{\r\n                formulario: state.formulario,\r\n                restaurantes: state.restaurantes,\r\n                errorformulario:state.errorformulario,\r\n                restaurante: state.restaurante,\r\n                mensaje: state.mensaje,\r\n                mostrarFormulario,\r\n                obtenerRestaurantes,\r\n                obtenerUnRestaurante,\r\n                mostrarError,\r\n                guardarRestauranteActual,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </restauranteContext.Provider>  \r\n    )\r\n}\r\n\r\nexport default RestauranteState;","import {MESAS_RESTAURANTE} from '../../types'\r\nimport {AGREGAR_MESA} from '../../types'\r\nimport {VALIDAR_MESA} from '../../types'\r\nimport {ELIMINAR_MESA} from '../../types'\r\nimport {ESTADO_MESA} from '../../types'\r\nimport {MESA_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_MESA} from '../../types'\r\nimport {LIMPIAR_MESA} from '../../types'\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case MESAS_RESTAURANTE:\r\n            return{\r\n                ...state,\r\n                mesasrestaurante:action.payload\r\n            }\r\n        \r\n        case MESA_ACTUAL:\r\n        return{\r\n            ...state,\r\n            mesa: state.mesasrestaurante.filter(mesa => mesa._id === action.payload)\r\n        }\r\n        case LIMPIAR_MESA:\r\n            return{\r\n                ...state,\r\n                mesaseleccionada:null\r\n\r\n            }\r\n        \r\n            \r\n\r\n        default: \r\n        return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport MesaContext from './mesasContext';\r\nimport MesaReducer from './mesasReducer';\r\nimport {MESAS_RESTAURANTE} from '../../types'\r\nimport {MESA_ACTUAL} from '../../types'\r\nimport {LIMPIAR_MESA} from '../../types'\r\nimport clienteAxios from '../../config/axios'\r\n\r\nconst MesaState = props =>{\r\n    \r\n    const initialState ={\r\n        mesasrestaurante: [],\r\n        errormesa: false,\r\n        mesaseleccionada:null,\r\n        mesa:null\r\n\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(MesaReducer, initialState);\r\n\r\n    //crear las funciones\r\n\r\n\r\n    //obtener las mesas de un restaurante\r\n\r\n    const obtenerMesas = async restaurante =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/mesas',{params:{restaurante}});\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: MESAS_RESTAURANTE,\r\n                payload: resultado.data.mesas\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    //Extrae una tarea para edicion\r\n    const guardarMesaActual = mesaId =>{\r\n        dispatch({\r\n            type:MESA_ACTUAL,\r\n            payload: mesaId\r\n        })\r\n         \r\n    }\r\n\r\n    \r\n    //Elimina la mesaseleccionada\r\n\r\n    const limpiarMesa = () =>{\r\n        dispatch({\r\n            type: LIMPIAR_MESA\r\n        })\r\n    }\r\n\r\n    return (\r\n        <MesaContext.Provider\r\n            value ={{\r\n               // mesas: state.mesas,\r\n                mesasrestaurante: state.mesasrestaurante,\r\n                errormesa: state.errormesa,\r\n                mesaseleccionada: state.mesaseleccionada,\r\n                mesa: state.mesa,\r\n                obtenerMesas,\r\n                guardarMesaActual,\r\n                limpiarMesa\r\n            }}\r\n        >\r\n            {props.children}\r\n        </MesaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MesaState; ","import {MENUS_RESTAURANTE} from '../../types'\r\nimport {MENU_ACTUAL} from '../../types'\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case MENUS_RESTAURANTE:\r\n            return{\r\n                ...state,\r\n                menusrestaurante:action.payload\r\n            }\r\n        case MENU_ACTUAL:\r\n        return{\r\n            ...state,\r\n            menu: state.menusrestaurante.filter(menu => menu._id === action.payload)\r\n        }\r\n      \r\n        \r\n            \r\n\r\n        default: \r\n        return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport MenuContext from './menusContext';\r\nimport MenuReducer from './menusReducer';\r\nimport {MENUS_RESTAURANTE} from '../../types'\r\nimport {MENU_ACTUAL} from '../../types'\r\nimport {LIMPIAR_MENU} from '../../types'\r\nimport clienteAxios from '../../config/axios'\r\n\r\nconst MenuState = props =>{\r\n    \r\n    const initialState ={\r\n        menusrestaurante: [],\r\n        errormenu: false,\r\n        menuseleccionado:null,\r\n        menu:null\r\n\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(MenuReducer, initialState);\r\n\r\n    //crear las funciones\r\n\r\n\r\n    //obtener las menus de un restaurante\r\n\r\n    const obtenerMenus = async restaurante =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/menus',{params:{restaurante}});\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: MENUS_RESTAURANTE,\r\n                payload: resultado.data.menus\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    //Extrae una tarea para edicion\r\n    const guardarMenuActual = menuId =>{\r\n        dispatch({\r\n            type:MENU_ACTUAL,\r\n            payload: menuId\r\n        })\r\n         \r\n    }\r\n\r\n    \r\n    //Elimina la menuseleccionado\r\n\r\n    const limpiarMenu = () =>{\r\n        dispatch({\r\n            type: LIMPIAR_MENU\r\n        })\r\n    }\r\n\r\n    return (\r\n        <MenuContext.Provider\r\n            value ={{\r\n               // menus: state.menus,\r\n                menusrestaurante: state.menusrestaurante,\r\n                errormenu: state.errormenu,\r\n                menuseleccionado: state.menuseleccionado,\r\n                menu: state.menu,\r\n                obtenerMenus,\r\n                guardarMenuActual,\r\n                limpiarMenu\r\n            }}\r\n        >\r\n            {props.children}\r\n        </MenuContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MenuState; ","import {SECCIONES_MENU} from '../../types'\r\nimport {AGREGAR_SECCION} from '../../types'\r\nimport {VALIDAR_SECCION} from '../../types'\r\nimport {ELIMINAR_SECCION} from '../../types'\r\nimport {ESTADO_SECCION} from '../../types'\r\nimport {SECCION_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_SECCION} from '../../types'\r\nimport {LIMPIAR_SECCION} from '../../types'\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case SECCIONES_MENU:\r\n            return{\r\n                ...state,\r\n                seccionesmenu:action.payload\r\n            }\r\n        case AGREGAR_SECCION:\r\n            return{\r\n                ...state,\r\n                seccionesmenu: [...state.seccionesmenu, action.payload],\r\n                errorseccion: false\r\n            }\r\n        case VALIDAR_SECCION:\r\n            return{\r\n                ...state,\r\n                errorseccion: true\r\n            }\r\n        case ELIMINAR_SECCION:\r\n            return{\r\n                ...state,\r\n                seccionesmenu: state.seccionesmenu.filter(seccion => seccion._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_SECCION:\r\n            return{\r\n                ...state,\r\n                seccionesmenu: state.seccionesmenu.map(seccion => seccion._id === action.payload._id \r\n                    ? action.payload\r\n                    : seccion)\r\n            }\r\n        case SECCION_ACTUAL:\r\n        return{\r\n            ...state,\r\n            seccion: state.seccionesmenu.filter(seccion => seccion._id === action.payload)\r\n        }\r\n        case LIMPIAR_SECCION:\r\n            return{\r\n                ...state,\r\n                seccionseleccionada:null\r\n\r\n            }\r\n        \r\n            \r\n\r\n        default: \r\n        return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport SeccionContext from './seccionesContext';\r\nimport SeccionReducer from './seccionesReducer';\r\nimport {SECCIONES_MENU} from '../../types'\r\nimport {AGREGAR_SECCION} from '../../types'\r\nimport {VALIDAR_SECCION} from '../../types'\r\nimport {ELIMINAR_SECCION} from '../../types'\r\nimport {ESTADO_SECCION} from '../../types'\r\nimport {SECCION_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_SECCION} from '../../types'\r\nimport {LIMPIAR_SECCION} from '../../types'\r\nimport clienteAxios from '../../config/axios'\r\n\r\nconst SeccionState = props =>{\r\n    \r\n    const initialState ={\r\n        seccionesmenu: [],\r\n        errormenu: false,\r\n        seccionseleccionada:null,\r\n        seccion: null\r\n\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(SeccionReducer, initialState);\r\n\r\n    //crear las funciones\r\n\r\n\r\n    //obtener las secciones de un menu\r\n \r\n    const obtenerSecciones = async menu =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/secciones',{params:{menu}});\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: SECCIONES_MENU,\r\n                payload: resultado.data.secciones\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    //agregar una seccion al menu seleccionado\r\n    const agregarSeccion = async  seccion =>{\r\n       // tarea.id = uuid.v4();\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/secciones', seccion);\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: AGREGAR_SECCION,\r\n                payload: seccion\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    //valida y muestra un error en caso de que sea necesario\r\n    const validarSeccion = () =>{\r\n        dispatch({\r\n            type: VALIDAR_SECCION\r\n        })\r\n    }\r\n\r\n    // Eliminar tarea por id\r\n    const eliminarSeccion = async (id, seccion) =>{\r\n        try {\r\n            await clienteAxios.delete(`/api/secciones/${id}`, {params: {seccion}});\r\n            dispatch({\r\n                type: ELIMINAR_SECCION,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.timeLog(error)\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    //Edita o modifica una tarea\r\n    const actualizarSeccion = async seccion =>{\r\n        console.log(seccion);\r\n       try {\r\n           const resultado = await clienteAxios.put(`/api/secciones/${seccion._id}`,seccion);\r\n           console.log(resultado)\r\n        dispatch({\r\n            type: ACTUALIZAR_SECCION,\r\n            payload: resultado.data.seccion\r\n        })\r\n       } catch (error) {\r\n           console.log(error)\r\n       }\r\n    }\r\n    \r\n    const guardarSeccionActual= seccionId =>{\r\n        dispatch({\r\n            type:SECCION_ACTUAL,\r\n            payload: seccionId\r\n        })\r\n    }\r\n    \r\n    \r\n    //Elimina la menuseleccionado\r\n\r\n    const limpiarSeccion = () =>{\r\n        dispatch({\r\n            type: LIMPIAR_SECCION\r\n        })\r\n    }\r\n\r\n    return (\r\n        <SeccionContext.Provider\r\n            value ={{\r\n                seccionesmenu: state.seccionesmenu,\r\n                errormenu: state.errormenu,\r\n                seccionseleccionada: state.seccionseleccionada,\r\n                seccion: state.seccion,\r\n                obtenerSecciones,\r\n                agregarSeccion,\r\n                validarSeccion,\r\n                eliminarSeccion,\r\n                guardarSeccionActual,\r\n                actualizarSeccion,\r\n                limpiarSeccion\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SeccionContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SeccionState;","import {PLATILLOS_SECCION} from '../../types'\r\nimport {AGREGAR_PLATILLO} from '../../types'\r\nimport {VALIDAR_PLATILLO} from '../../types'\r\nimport {ELIMINAR_PLATILLO} from '../../types'\r\nimport {ESTADO_PLATILLO} from '../../types'\r\nimport {PLATILLO_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_PLATILLO} from '../../types'\r\nimport {LIMPIAR_PLATILLO} from '../../types'\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case PLATILLOS_SECCION:\r\n            return{\r\n                ...state,\r\n                platillosseccion:action.payload\r\n            }\r\n        case AGREGAR_PLATILLO:\r\n            return{\r\n                ...state,\r\n                platillosseccion: [...state.platillosseccion, action.payload],\r\n                errorplatillo: false\r\n            }\r\n        case VALIDAR_PLATILLO:\r\n            return{\r\n                ...state,\r\n                errorplatillo: true\r\n            }\r\n        case ELIMINAR_PLATILLO:\r\n            return{\r\n                ...state,\r\n                platillosseccion: state.platillosseccion.filter(platillo => platillo._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_PLATILLO:\r\n            return{\r\n                ...state,\r\n                platillosseccion: state.platillosseccion.map(platillo => platillo._id === action.payload._id \r\n                    ? action.payload\r\n                    : platillo)\r\n            }\r\n        case PLATILLO_ACTUAL:\r\n        return{\r\n            ...state,\r\n            platillo:  action.payload\r\n        }\r\n        case LIMPIAR_PLATILLO:\r\n            return{\r\n                ...state,\r\n                platilloseleccionado:null\r\n\r\n            }\r\n        \r\n            \r\n\r\n        default: \r\n        return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport PlatilloContext from './platillosContext';\r\nimport PlatilloReducer from './platillosReducer';\r\nimport {PLATILLOS_SECCION} from '../../types'\r\nimport {AGREGAR_PLATILLO} from '../../types'\r\nimport {VALIDAR_PLATILLO} from '../../types'\r\nimport {ELIMINAR_PLATILLO} from '../../types'\r\nimport {ESTADO_PLATILLO} from '../../types'\r\nimport {PLATILLO_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_PLATILLO} from '../../types'\r\nimport {LIMPIAR_PLATILLO} from '../../types'\r\nimport clienteAxios from '../../config/axios'\r\n\r\nconst PlatilloState = props =>{\r\n    \r\n    const initialState ={\r\n        platillosseccion: [],\r\n        errorseccion: false,\r\n        platilloseleccionado:null,\r\n        platillo: null\r\n\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(PlatilloReducer, initialState);\r\n\r\n    //crear las funciones\r\n\r\n\r\n    //obtener las platillos de un seccion\r\n\r\n    const obtenerPlatillos = async seccion =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/platillos',{params:{seccion}});\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: PLATILLOS_SECCION,\r\n                payload: resultado.data.platillos\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    //agregar una platillo al seccion seleccionado\r\n    const agregarPlatillo = async  platillo =>{\r\n       // tarea.id = uuid.v4();\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/platillos', platillo);\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: AGREGAR_PLATILLO,\r\n                payload: platillo\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    //valida y muestra un error en caso de que sea necesario\r\n    const validarPlatillo = () =>{\r\n        dispatch({\r\n            type: VALIDAR_PLATILLO\r\n        })\r\n    }\r\n\r\n    // Eliminar tarea por id\r\n    const eliminarPlatillo = async (id, platillo) =>{\r\n        try {\r\n            await clienteAxios.delete(`/api/platillos/${id}`, {params: {platillo}});\r\n            dispatch({\r\n                type: ELIMINAR_PLATILLO,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.timeLog(error)\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    //Edita o modifica una tarea\r\n    const actualizarPlatillo = async platillo =>{\r\n        console.log(\"PLATILLO\",platillo);\r\n       try {\r\n           const resultado = await clienteAxios.put(`/api/platillos/${platillo._id}`,platillo);\r\n           console.log(resultado)\r\n        dispatch({\r\n            type: ACTUALIZAR_PLATILLO,\r\n            payload: resultado.data.platillo\r\n        })\r\n       } catch (error) {\r\n           console.log(error)\r\n       }\r\n    }\r\n    \r\n    const guardarPlatilloActual= platilloId =>{\r\n        dispatch({\r\n            type:PLATILLO_ACTUAL,\r\n            payload: platilloId\r\n        })\r\n    } \r\n    \r\n    \r\n    //Elimina la seccionseleccionado\r\n\r\n    const limpiarPlatillo = () =>{\r\n        dispatch({\r\n            type: LIMPIAR_PLATILLO\r\n        })\r\n    }\r\n\r\n    return (\r\n        <PlatilloContext.Provider\r\n            value ={{\r\n                platillosseccion: state.platillosseccion,\r\n                errorplatillo: state.errorplatillo,\r\n                platilloseleccionado: state.platilloseleccionado,\r\n                platillo: state.platillo,\r\n                obtenerPlatillos,\r\n                agregarPlatillo,\r\n                validarPlatillo,\r\n                eliminarPlatillo,\r\n                guardarPlatilloActual,\r\n                actualizarPlatillo,\r\n                limpiarPlatillo\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PlatilloContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PlatilloState;","import {SESIONGENERAL_MESA} from '../../types'\r\nimport {AGREGAR_SESIONGENERAL} from '../../types'\r\nimport {VALIDAR_SESIONGENERAL} from '../../types'\r\nimport {ELIMINAR_SESIONGENERAL} from '../../types'\r\nimport {ESTADO_SESIONGENERAL} from '../../types'\r\nimport {SESIONGENERAL_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_SESIONGENERAL} from '../../types'\r\nimport {LIMPIAR_SESIONGENERAL} from '../../types'\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case SESIONGENERAL_MESA:\r\n            return{\r\n                ...state,\r\n                sesiongeneralmesa:action.payload\r\n            }\r\n        case AGREGAR_SESIONGENERAL:\r\n            return{\r\n                ...state,\r\n                sesiongeneralmesa: [...state.sesiongeneralmesa, action.payload],\r\n                errorsesiongeneral: false\r\n            }\r\n        case VALIDAR_SESIONGENERAL:\r\n            return{\r\n                ...state,\r\n                errorsesiongeneral: true\r\n            }\r\n        case ELIMINAR_SESIONGENERAL:\r\n            return{\r\n                ...state,\r\n                sesiongeneralmesa: state.sesiongeneralmesa.filter(sesiongeneral => sesiongeneral._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_SESIONGENERAL:\r\n            return{\r\n                ...state,\r\n                sesiongeneralmesa: state.sesiongeneralmesa.map(sesiongeneral => sesiongeneral._id === action.payload._id \r\n                    ? action.payload\r\n                    : sesiongeneral)\r\n            }\r\n        case SESIONGENERAL_ACTUAL:\r\n        return{\r\n            ...state,\r\n            sesiongeneral: state.sesiongeneralmesa.filter(sesiongeneral => sesiongeneral._id === action.payload)\r\n        }\r\n        case LIMPIAR_SESIONGENERAL:\r\n            return{\r\n                ...state,\r\n                sesiongeneralseleccionada:null\r\n\r\n            }\r\n        \r\n            \r\n\r\n        default: \r\n        return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport SesionGeneralContext from './sesionGeneralContext';\r\nimport SesionGeneralReducer from './sesionGeneralReducer';\r\nimport {SESIONGENERAL_MESA} from '../../types'\r\nimport {AGREGAR_SESIONGENERAL} from '../../types'\r\nimport {VALIDAR_SESIONGENERAL} from '../../types'\r\nimport {ELIMINAR_SESIONGENERAL} from '../../types'\r\nimport {ESTADO_SESIONGENERAL} from '../../types'\r\nimport {SESIONGENERAL_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_SESIONGENERAL} from '../../types'\r\nimport {LIMPIAR_SESIONGENERAL} from '../../types'\r\nimport clienteAxios from '../../config/axios'\r\n\r\nconst SesionGeneralState = props =>{\r\n    \r\n    const initialState ={\r\n        sesiongeneralmesa: [],\r\n        errorsesiongeneral: false,\r\n        sesiongeneralseleccionada:null,\r\n        sesiongeneral:null\r\n\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(SesionGeneralReducer, initialState);\r\n\r\n    //crear las funciones\r\n\r\n \r\n    //obtener las menus de un restaurante\r\n\r\n    const obtenerSesionGeneral = async mesa =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/sesionesgenerales',{params:{mesa}});\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: SESIONGENERAL_MESA,\r\n                payload: resultado.data.sesionesGenerales\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    //agregar una tarea al restaurante seleccionado\r\n    const agregarSesionGeneral = async  sesiongeneral =>{\r\n       // tarea.id = uuid.v4();\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/sesionesgenerales', sesiongeneral);\r\n            console.log(resultado)\r\n            localStorage.setItem('sesiongeneralid',resultado.data.sesionGeneral._id);\r\n            dispatch({\r\n                type: AGREGAR_SESIONGENERAL,\r\n                payload: sesiongeneral\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    //valida y muestra un error en caso de que sea necesario\r\n    const validarSesionGeneral = () =>{\r\n        dispatch({\r\n            type: VALIDAR_SESIONGENERAL\r\n        })\r\n    }\r\n\r\n    // Eliminar tarea por id\r\n    const eliminarSesionGeneral = async (id, mesa) =>{\r\n        try {\r\n            await clienteAxios.delete(`/api/sesionesgenerales/${id}`, {params: {mesa}});\r\n            dispatch({\r\n                type: ELIMINAR_SESIONGENERAL,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.timeLog(error)\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    //Edita o modifica una tarea\r\n    const actualizarSesionGeneral = async sesiongeneral =>{\r\n        console.log(sesiongeneral);\r\n       try {\r\n           const resultado = await clienteAxios.put(`/api/sesionesgenerales/${sesiongeneral._id}`,sesiongeneral);\r\n           console.log(resultado)\r\n        dispatch({\r\n            type: ACTUALIZAR_SESIONGENERAL,\r\n            payload: resultado.data.sesiongeneral\r\n        })\r\n       } catch (error) {\r\n           console.log(error)\r\n       }\r\n    }\r\n    //Extrae una tarea para edicion\r\n    const guardarSesionGeneralActual = sesiongeneralId =>{\r\n        dispatch({\r\n            type:SESIONGENERAL_ACTUAL,\r\n            payload: sesiongeneralId\r\n        })\r\n         \r\n    }\r\n\r\n    \r\n    //Elimina la menuseleccionado\r\n\r\n    const limpiarSesionGeneral = () =>{\r\n        dispatch({\r\n            type: LIMPIAR_SESIONGENERAL\r\n        })\r\n    }\r\n\r\n    return (\r\n        <SesionGeneralContext.Provider\r\n            value ={{\r\n               // menus: state.menus,\r\n                sesiongeneralmesa: state.sesiongeneralmesa,\r\n                errorsesiongeneral: state.errorsesiongeneral,\r\n                sesiongeneralseleccionada: state.sesiongeneralseleccionada,\r\n                sesiongeneral: state.sesiongeneral,\r\n                obtenerSesionGeneral,\r\n                agregarSesionGeneral,\r\n                validarSesionGeneral,\r\n                eliminarSesionGeneral,\r\n                guardarSesionGeneralActual,\r\n                actualizarSesionGeneral,\r\n                limpiarSesionGeneral\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SesionGeneralContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SesionGeneralState; ","import {SESIONINDIVIDUAL_SESIONGENERAL} from '../../types'\r\nimport {AGREGAR_SESIONINDIVIDUAL} from '../../types'\r\nimport {VALIDAR_SESIONINDIVIDUAL} from '../../types'\r\nimport {ELIMINAR_SESIONINDIVIDUAL} from '../../types'\r\nimport {ESTADO_SESIONINDIVIDUAL} from '../../types'\r\nimport {SESIONINDIVIDUAL_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_SESIONINDIVIDUAL} from '../../types'\r\nimport {LIMPIAR_SESIONINDIVIDUAL} from '../../types'\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case SESIONINDIVIDUAL_SESIONGENERAL:\r\n            return{\r\n                ...state,\r\n                sesionindividualsesiongeneral:action.payload\r\n            }\r\n        case AGREGAR_SESIONINDIVIDUAL:\r\n\r\n            return{\r\n                ...state,\r\n                sesionindividualsesiongeneral: [...state.sesionindividualsesiongeneral, action.payload],\r\n                errorsesionindividual: false\r\n            }\r\n        case VALIDAR_SESIONINDIVIDUAL:\r\n            return{\r\n                ...state,\r\n                errorsesionindividual: true\r\n            }\r\n        case ELIMINAR_SESIONINDIVIDUAL:\r\n            return{\r\n                ...state,\r\n                sesionindividualsesiongeneral: state.sesionindividualsesiongeneral.filter(sesionindividual => sesionindividual._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_SESIONINDIVIDUAL:\r\n            return{\r\n                ...state,\r\n                sesionindividualsesiongeneral: state.sesionindividualsesiongeneral.map(sesionindividual => sesionindividual._id === action.payload._id \r\n                    ? action.payload\r\n                    : sesionindividual)\r\n            }\r\n        case SESIONINDIVIDUAL_ACTUAL:\r\n        return{\r\n            ...state,\r\n            sesionindividual: state.sesionindividualsesiongeneral.filter(sesionindividual => sesionindividual._id === action.payload)\r\n        }\r\n        case LIMPIAR_SESIONINDIVIDUAL:\r\n            return{\r\n                ...state,\r\n                sesionindividualseleccionada:null\r\n\r\n            }\r\n        \r\n            \r\n\r\n        default: \r\n        return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport SesionIndividualContext from './sesionIndividualContext';\r\nimport SesionIndividualReducer from './sesionIndividualReducer';\r\nimport {SESIONINDIVIDUAL_SESIONGENERAL} from '../../types'\r\nimport {AGREGAR_SESIONINDIVIDUAL} from '../../types'\r\nimport {VALIDAR_SESIONINDIVIDUAL} from '../../types'\r\nimport {ELIMINAR_SESIONINDIVIDUAL} from '../../types'\r\nimport {ESTADO_SESIONINDIVIDUAL} from '../../types'\r\nimport {SESIONINDIVIDUAL_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_SESIONINDIVIDUAL} from '../../types'\r\nimport {LIMPIAR_SESIONINDIVIDUAL} from '../../types'\r\nimport clienteAxios from '../../config/axios'\r\n\r\nconst SesionIndividualState = props =>{\r\n    \r\n    const initialState ={\r\n        sesionindividualsesiongeneral: [],\r\n        errorsesionindividual: false,\r\n        sesionindividualseleccionada:null,\r\n        sesionindividual:null\r\n\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(SesionIndividualReducer, initialState);\r\n\r\n    //crear las funciones\r\n\r\n\r\n    //obtener las menus de un restaurante\r\n\r\n    const obtenerSesionIndividual = async sesionGeneral =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/sesionesindividuales',{params:{sesionGeneral}});\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: SESIONINDIVIDUAL_SESIONGENERAL,\r\n                payload: resultado.data.sesionesIndividuales\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    //agregar una tarea al restaurante seleccionado\r\n    const agregarSesionIndividual = async  sesionindividual =>{\r\n       // tarea.id = uuid.v4();\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/sesionesindividuales', sesionindividual);\r\n            console.log(resultado)\r\n            localStorage.setItem('sesionindividualid',resultado.data.sesionIndividual._id);\r\n\r\n            dispatch({\r\n                type: AGREGAR_SESIONINDIVIDUAL,\r\n                payload: sesionindividual\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    //valida y muestra un error en caso de que sea necesario\r\n    const validarSesionIndividual = () =>{\r\n        dispatch({\r\n            type: VALIDAR_SESIONINDIVIDUAL\r\n        })\r\n    }\r\n\r\n    // Eliminar tarea por id\r\n    const eliminarSesionIndividual = async (id, sesiongeneral) =>{\r\n        try {\r\n            await clienteAxios.delete(`/api/sesionesindividuales/${id}`, {params: {sesiongeneral}});\r\n            dispatch({\r\n                type: ELIMINAR_SESIONINDIVIDUAL,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.timeLog(error)\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    //Edita o modifica una tarea\r\n    const actualizarSesionIndividual = async sesionindividual =>{\r\n        console.log(sesionindividual);\r\n       try {\r\n           const resultado = await clienteAxios.put(`/api/sesionesindividuales/${sesionindividual._id}`,sesionindividual);\r\n           console.log(resultado)\r\n        dispatch({\r\n            type: ACTUALIZAR_SESIONINDIVIDUAL,\r\n            payload: resultado.data.sesionindividual\r\n        })\r\n       } catch (error) {\r\n           console.log(error)\r\n       }\r\n    }\r\n    //Extrae una tarea para edicion\r\n    const guardarSesionIndividualActual = sesionindividualId =>{\r\n        dispatch({\r\n            type:SESIONINDIVIDUAL_ACTUAL,\r\n            payload: sesionindividualId\r\n        })\r\n         \r\n    }\r\n\r\n    \r\n    //Elimina la menuseleccionado\r\n\r\n    const limpiarSesionIndividual = () =>{\r\n        dispatch({\r\n            type: LIMPIAR_SESIONINDIVIDUAL\r\n        })\r\n    }\r\n\r\n    return (\r\n        <SesionIndividualContext.Provider\r\n            value ={{\r\n               // menus: state.menus,\r\n                sesionindividualsesiongeneral: state.sesionindividualsesiongeneral,\r\n                errorsesionindividual: state.errorsesionindividual,\r\n                sesionindividualseleccionada: state.sesionindividualseleccionada,\r\n                sesionindividual: state.sesionindividual,\r\n                obtenerSesionIndividual,\r\n                agregarSesionIndividual,\r\n                validarSesionIndividual,\r\n                eliminarSesionIndividual,\r\n                guardarSesionIndividualActual,\r\n                actualizarSesionIndividual,\r\n                limpiarSesionIndividual\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SesionIndividualContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SesionIndividualState; ","import {ORDEN_SESIONINDIVIDUAL} from '../../types'\r\nimport {ORDEN_RESTAURANTE} from '../../types'\r\nimport {AGREGAR_ORDEN} from '../../types'\r\nimport {VALIDAR_ORDEN} from '../../types'\r\nimport {ELIMINAR_ORDEN} from '../../types'\r\nimport {ESTADO_ORDEN} from '../../types'\r\nimport {ORDEN_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_ORDEN} from '../../types'\r\nimport {LIMPIAR_ORDEN} from '../../types'\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case ORDEN_SESIONINDIVIDUAL:\r\n            return{\r\n                ...state,\r\n                ordensesionindividual:action.payload\r\n            }\r\n            case ORDEN_RESTAURANTE:\r\n            return{\r\n                ...state,\r\n                ordenrestaurante:action.payload\r\n            }\r\n        case AGREGAR_ORDEN:\r\n            return{\r\n                ...state,\r\n                ordensesionindividual: [...state.ordensesionindividual, action.payload],\r\n                errororden: false\r\n            }\r\n        case VALIDAR_ORDEN:\r\n            return{\r\n                ...state,\r\n                errororden: true\r\n            }\r\n        case ELIMINAR_ORDEN:\r\n            return{\r\n                ...state,\r\n                ordensesionindividual: state.ordensesionindividual.filter(orden => orden._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_ORDEN:\r\n            return{\r\n                ...state,\r\n                ordensesionindividual: state.ordensesionindividual.map(orden => orden._id === action.payload._id \r\n                    ? action.payload\r\n                    : orden)\r\n            }\r\n        case ORDEN_ACTUAL:\r\n        return{\r\n            ...state,\r\n            orden: state.ordensesionindividual.filter(orden => orden._id === action.payload)\r\n        }\r\n        case LIMPIAR_ORDEN:\r\n            return{\r\n                ...state,\r\n                ordenseleccionada:null\r\n\r\n            }\r\n        \r\n            \r\n\r\n        default: \r\n        return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport OrdenContext from './ordenContext';\r\nimport OrdenReducer from './ordenReducer';\r\nimport {ORDEN_SESIONINDIVIDUAL} from '../../types'\r\nimport {ORDEN_RESTAURANTE} from '../../types'\r\nimport {AGREGAR_ORDEN} from '../../types'\r\nimport {VALIDAR_ORDEN} from '../../types'\r\nimport {ELIMINAR_ORDEN} from '../../types'\r\nimport {ESTADO_ORDEN} from '../../types'\r\nimport {ORDEN_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_ORDEN} from '../../types'\r\nimport {LIMPIAR_ORDEN} from '../../types'\r\nimport clienteAxios from '../../config/axios'\r\n\r\nconst OrdenState = props =>{\r\n    \r\n    const initialState ={\r\n        ordenrestaurante:[],\r\n        ordensesionindividual: [],\r\n        errororden: false,\r\n        ordenseleccionada:null,\r\n        orden:null\r\n\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(OrdenReducer, initialState);\r\n\r\n    //crear las funciones\r\n\r\n\r\n    //obtener las menus de un restaurante\r\n\r\n    const obtenerOrdenSesionIndividual = async sesionindividual =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/ordenes/sesionIndividual',{params:{sesionindividual}});\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: ORDEN_SESIONINDIVIDUAL,\r\n                payload: resultado.data.ordenes\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const obtenerOrdenRestaurante = async restaurante =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/ordenes/restaurante',{params:{restaurante}});\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: ORDEN_RESTAURANTE,\r\n                payload: resultado.data.ordenes\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    //agregar una tarea al restaurante seleccionado\r\n    const agregarOrden = async  orden =>{\r\n       // tarea.id = uuid.v4();\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/ordenes', orden);\r\n            console.log(resultado)\r\n            localStorage.setItem('ordenid',resultado.data.orden._id);\r\n            dispatch({\r\n                type: AGREGAR_ORDEN,\r\n                payload: orden\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    //valida y muestra un error en caso de que sea necesario\r\n    const validarOrden = () =>{\r\n        dispatch({\r\n            type: VALIDAR_ORDEN\r\n        })\r\n    }\r\n\r\n    // Eliminar tarea por id\r\n    const eliminarOrden = async (id, sesionindividual) =>{\r\n        try {\r\n            await clienteAxios.delete(`/api/ordenes/${id}`, {params: {sesionindividual}});\r\n            dispatch({\r\n                type: ELIMINAR_ORDEN,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.timeLog(error)\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    //Edita o modifica una tarea\r\n    const actualizarOrden = async orden =>{\r\n        console.log(orden);\r\n       try {\r\n           const resultado = await clienteAxios.put(`/api/ordenes/${orden._id}`,orden);\r\n           console.log(resultado)\r\n        dispatch({\r\n            type: ACTUALIZAR_ORDEN,\r\n            payload: resultado.data.orden\r\n        })\r\n       } catch (error) {\r\n           console.log(error)\r\n       }\r\n    }\r\n    //Extrae una tarea para edicion\r\n    const guardarOrdenActual = ordenId =>{\r\n        dispatch({\r\n            type:ORDEN_ACTUAL,\r\n            payload: ordenId\r\n        })\r\n         \r\n    }\r\n\r\n    \r\n    //Elimina la menuseleccionado\r\n\r\n    const limpiarOrden = () =>{\r\n        dispatch({\r\n            type: LIMPIAR_ORDEN\r\n        })\r\n    }\r\n\r\n    return (\r\n        <OrdenContext.Provider\r\n            value ={{\r\n               // menus: state.menus,\r\n                ordensesionindividual: state.ordensesionindividual,\r\n                ordenrestaurante: state.ordenrestaurante,\r\n                errororden: state.errororden,\r\n                ordenseleccionada: state.ordenseleccionada,\r\n                orden: state.orden,\r\n                obtenerOrdenSesionIndividual,\r\n                obtenerOrdenRestaurante,\r\n                agregarOrden,\r\n                validarOrden,\r\n                eliminarOrden,\r\n                guardarOrdenActual,\r\n                actualizarOrden,\r\n                limpiarOrden\r\n            }}\r\n        >\r\n            {props.children}\r\n        </OrdenContext.Provider>\r\n    )\r\n}\r\n\r\nexport default OrdenState; ","import {PLATILLOORDENADO_ORDEN} from '../../types'\r\nimport {AGREGAR_PLATILLOORDENADO} from '../../types'\r\nimport {VALIDAR_PLATILLOORDENADO} from '../../types'\r\nimport {ELIMINAR_PLATILLOORDENADO} from '../../types'\r\nimport {ESTADO_PLATILLOORDENADO} from '../../types'\r\nimport {PLATILLOORDENADO_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_PLATILLOORDENADO} from '../../types'\r\nimport {LIMPIAR_PLATILLOORDENADO} from '../../types'\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case PLATILLOORDENADO_ORDEN:\r\n            return{\r\n                ...state,\r\n                platilloOrdenadoOrden:action.payload\r\n            }\r\n        case AGREGAR_PLATILLOORDENADO:\r\n            return{\r\n                ...state,\r\n                platilloOrdenadoOrden: [...state.platilloOrdenadoOrden, action.payload],\r\n                errorplatilloordenado: false\r\n            }\r\n        case VALIDAR_PLATILLOORDENADO:\r\n            return{\r\n                ...state,\r\n                errorplatilloordenado: true\r\n            }\r\n        case ELIMINAR_PLATILLOORDENADO:\r\n            return{\r\n                ...state,\r\n                platilloOrdenadoOrden: state.platilloOrdenadoOrden.filter(platilloOrdenado => platilloOrdenado._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_PLATILLOORDENADO:\r\n            return{\r\n                ...state,\r\n                platilloOrdenadoOrden: state.platilloOrdenadoOrden.map(platilloOrdenado =>\r\n                    console.log(platilloOrdenado)\r\n                    ? action.payload\r\n                    : platilloOrdenado)\r\n            }\r\n        case PLATILLOORDENADO_ACTUAL:\r\n        return{\r\n            ...state,\r\n            orden: state.platilloOrdenadoOrden.filter(platilloOrdenado => platilloOrdenado._id === action.payload)\r\n        }\r\n        case LIMPIAR_PLATILLOORDENADO:\r\n            return{\r\n                ...state,\r\n                platilloordenadoseleccionado:null\r\n\r\n            }\r\n        \r\n            \r\n\r\n        default: \r\n        return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport PlatilloOrdenadoContext from './platilloOrdenadoContext';\r\nimport PlatilloOrdenadoReducer from './platilloOrdenadoReducer';\r\nimport {PLATILLOORDENADO_ORDEN} from '../../types'\r\nimport {AGREGAR_PLATILLOORDENADO} from '../../types'\r\nimport {VALIDAR_PLATILLOORDENADO} from '../../types'\r\nimport {ELIMINAR_PLATILLOORDENADO} from '../../types'\r\nimport {ESTADO_PLATILLOORDENADO} from '../../types'\r\nimport {PLATILLOORDENADO_ACTUAL} from '../../types'\r\nimport {ACTUALIZAR_PLATILLOORDENADO} from '../../types'\r\nimport {LIMPIAR_PLATILLOORDENADO} from '../../types'\r\nimport clienteAxios from '../../config/axios'\r\n\r\nconst PlatilloOrdenadoState = props =>{\r\n    \r\n    const initialState ={\r\n        platilloOrdenadoOrden: [],\r\n        errorplatilloordenado: false,\r\n        platilloordenadoseleccionado:null,\r\n        platilloordenado:null\r\n\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(PlatilloOrdenadoReducer, initialState);\r\n\r\n    //crear las funciones\r\n\r\n\r\n    //obtener las menus de un restaurante\r\n\r\n    const obtenerPlatilloOrdenado = async orden =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/platilloOrdenado',{params:{orden}});\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: PLATILLOORDENADO_ORDEN,\r\n                payload: resultado.data.platillosOrdenados\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    //agregar una tarea al restaurante seleccionado\r\n    const agregarPlatilloOrdenado = async  platilloordenado =>{\r\n       // tarea.id = uuid.v4();\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/platilloOrdenado', platilloordenado);\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: AGREGAR_PLATILLOORDENADO,\r\n                payload: platilloordenado\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    //valida y muestra un error en caso de que sea necesario\r\n    const validarPlatilloOrdenado = () =>{\r\n        dispatch({\r\n            type: VALIDAR_PLATILLOORDENADO\r\n        })\r\n    }\r\n\r\n    // Eliminar tarea por id\r\n    const eliminarPlatilloOrdenado = async (id, orden) =>{\r\n        try {\r\n            await clienteAxios.delete(`/api/platilloOrdenado/${id}`, {params: {orden}});\r\n            dispatch({\r\n                type: ELIMINAR_PLATILLOORDENADO,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.timeLog(error)\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    //Edita o modifica una tarea\r\n    const actualizarPlatilloOrdenado = async platilloordenado =>{\r\n        console.log(platilloordenado);\r\n       try {\r\n           const resultado = await clienteAxios.put(`/api/platilloOrdenado/${platilloordenado._id}`,platilloordenado);\r\n           console.log(resultado)\r\n        dispatch({\r\n            type: ACTUALIZAR_PLATILLOORDENADO,\r\n            payload: resultado.data.platilloordenado\r\n        })\r\n       } catch (error) {\r\n           console.log(error)\r\n       }\r\n    }\r\n    //Extrae una tarea para edicion\r\n    const guardarPlatilloOrdenadoActual = platilloordenadoId =>{\r\n        dispatch({\r\n            type: PLATILLOORDENADO_ACTUAL,\r\n            payload: platilloordenadoId\r\n        })\r\n         \r\n    }\r\n\r\n    \r\n    //Elimina la menuseleccionado\r\n\r\n    const limpiarPlatilloOrdenado = () =>{\r\n        dispatch({\r\n            type: LIMPIAR_PLATILLOORDENADO\r\n        })\r\n    }\r\n\r\n    return (\r\n        <PlatilloOrdenadoContext.Provider\r\n            value ={{\r\n               // menus: state.menus,\r\n                platilloOrdenadoOrden: state.platilloOrdenadoOrden,\r\n                errorplatilloordenado: state.errorplatilloordenado,\r\n                platilloordenadoseleccionado: state.platilloordenadoseleccionado,\r\n                platilloordenado: state.platilloordenado,\r\n                obtenerPlatilloOrdenado,\r\n                agregarPlatilloOrdenado,\r\n                validarPlatilloOrdenado,\r\n                eliminarPlatilloOrdenado,\r\n                guardarPlatilloOrdenadoActual,\r\n                actualizarPlatilloOrdenado,\r\n                limpiarPlatilloOrdenado\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PlatilloOrdenadoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PlatilloOrdenadoState; ","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\r\nimport Welcome from './components/Welcome';\r\nimport MenuDigital from './components/MenuDigital.js';\r\nimport DetallePlatillo from './components/DetallePlatillo';\r\nimport Orden from './components/Orden'\r\nimport Estatus from './components/Estatus'\r\n\r\nimport RestauranteState from './context/restaurantes/restauranteState';\r\nimport MesaState from './context/mesas/mesasState';\r\nimport MenuState from './context/menus/menusState';\r\nimport SeccionState from './context/secciones/seccionesState';\r\nimport PlatillosState from './context/platillos/platillosState';\r\nimport SesionGeneralState from './context/sesionesGenerales/sesionGeneralState';\r\nimport SesionIndividualState from './context/sesionesIndividuales/sesionIndividualState';\r\nimport OrdenState from './context/ordenes/ordenState';\r\nimport PlatilloOrdenadoState from './context/platillosOrdenados/platilloOrdenadoState';\r\n\r\n\r\n// lol\r\n\r\nfunction App() {\r\n   \r\n  console.log(process.env.REACT_APP_BACKEND_URL);\r\n\r\n  return (\r\n    <RestauranteState>\r\n      <MesaState>\r\n        <MenuState>\r\n          <SeccionState>\r\n            <PlatillosState>\r\n              <SesionGeneralState>\r\n                <SesionIndividualState>\r\n                  <OrdenState>\r\n                    <PlatilloOrdenadoState>\r\n               \r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Welcome} />\r\n            <Route exact path=\"/MenuDigital\" component={MenuDigital} />\r\n            <Route exact path=\"/DetallePlatillo\" component={DetallePlatillo} />\r\n            <Route exact path=\"/Orden\" component={Orden} />\r\n            <Route exact path=\"/Estatus\" component={Estatus} />\r\n          </Switch>\r\n        </Router>\r\n       </PlatilloOrdenadoState>\r\n        </OrdenState>\r\n        </SesionIndividualState>\r\n        </SesionGeneralState>\r\n        </PlatillosState>\r\n        </SeccionState>\r\n        </MenuState>\r\n        </MesaState>\r\n        </RestauranteState>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}